{"name":"Dendrite","tagline":"","body":"Dendrite\r\n=======\r\n[![Build Status](https://travis-ci.org/Lab41/Dendrite.png?branch=master)](https://travis-ci.org/Lab41/Dendrite) [![Coverage Status](https://coveralls.io/repos/Lab41/Dendrite/badge.png)](https://coveralls.io/r/Lab41/Dendrite)\r\n\r\nPeople. Places. Things. Graphs.\r\n\r\nIt turns out that much of the world, both physical and virtual, can be represented as a graph. Graphs describe things that are linked together such as web pages and human societies. Like many other topics, Web technologies can make these types of powerful mathematical concepts more accessible to everyday users.\r\nDendrite is a Lab41 exploration of ways to analyze, manipulate, version, and share extremely large graphs:\r\n- The Web frontend leverages AngularJS to provide a responsive data-driven experience\r\n- The UI interacts with a backend instance of the Titan Distributed Graph Database\r\n\r\nInstall instructions\r\n====================\r\n\r\n1. Check out the code:\r\n\r\n  ```\r\n  % git clone https://github.com/Lab4/Dendrite.git\r\n  % cd Dendrite\r\n  ```\r\n\r\n2. Start the application.\r\n\r\n  Dendrite has two run profiles. The first, which is the default, is the\r\n  development profile. This uses Titan's BerkeleyDB backend and an embedded\r\n  Elasticsearch to service all the requests. It can be launched with:\r\n\r\n  ```\r\n  % ./bin/dendrite-server start\r\n  ```\r\n\r\n  To run Dendrite in production mode with HBase and an External Elasticsearch\r\n  first edit ``src/main/resources/META-INF/spring/prod/dendrite.properties`` \r\n  to match your environment, for example:\r\n\r\n  ```\r\n  dendrite-graph-factory.name-prefix=dendrite-prod-\r\n  dendrite-graph-factory.storage.backend=hbase\r\n  dendrite-graph-factory.storage.hostname=server.fqdn\r\n  dendrite-graph-factory.storage.port=2181\r\n  dendrite-graph-factory.storage.index.backend=elasticsearch\r\n  dendrite-graph-factory.storage.index.hostname=server.fqdn\r\n  dendrite-graph-factory.storage.index.client-only=true\r\n  dendrite-graph-factory.storage.index.local-mode=false\r\n  metadata-graph.properties=/WEB-INF/metadata-graph.properties\r\n  metadata.directory=/tmp/dendrite\r\n  history.properties=/WEB-INF/history.properties\r\n  ```\r\n\r\n  Then launch dendrite with:\r\n\r\n  ```\r\n  % hadoop fs -mkdir -p dendrite/\r\n  % hadoop fs -put src/main/groovy/org/lab41/dendrite/dendrite-import.groovy dendrite/\r\n  % DENDRITE_PROFILE=prod ./bin/dendrite-server start\r\n  ```\r\n\r\n3. Once ``dendrite-server`` is running initialize a graph-of-the-gods example graph:\r\n\r\n  ```bash\r\n  % pip install requests\r\n  % ./bin/dendrite create-project --script ./data/init-graph-of-the-gods.groovy my-project-name\r\n  ```\r\n\r\n4. After the webserver is up and running browse to http://server.fqdn:8000/dendrite\r\n5. Login as a user with user/password or as an admin with admin/password\r\n\r\nRequired Dependencies\r\n---------------------\r\n\r\n- Java\r\n- Maven\r\n- Python\r\n- Python Pip\r\n\r\nOptional Dependencies\r\n---------------------\r\n\r\n- Hadoop\r\n- HBase\r\n- Elasticsearch\r\n\r\n\r\nCurrently supported import and export graph formats \r\n===================================================\r\n\r\n- GML\r\n- GraphML\r\n- GraphSON\r\n\r\nRelated repositories\r\n====================\r\n\r\n - [MRKronecker](https://github.com/Lab41/MRKronecker)\r\n - [graph-generators](http://lab41.github.io/graph-generators/)\r\n\r\nContributing to Dendrite\r\n=======================\r\n\r\nWhat to contribute?  Awesome!  Issue a pull request or see more details [here](https://github.com/Lab41/Dendrite/blob/master/CONTRIBUTING.md).\r\n\r\n[![Bitdeli Badge](https://d2weczhvl823v0.cloudfront.net/Lab41/dendrite/trend.png)](https://bitdeli.com/free \"Bitdeli Badge\")\r\n","google":"UA-40464073-1","note":"Don't delete this file! It's used internally to help with page regeneration."}