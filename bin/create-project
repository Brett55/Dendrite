#!/usr/bin/env python

import argparse
import base64
import json
import sys
import urllib2

def main():
    parser = argparse.ArgumentParser()
    parser.add_argument('name')
    parser.add_argument('backend')
    parser.add_argument('script')
    args = parser.parse_args()

    if args.name == '':
        print >> sys.stderr, 'name cannot be empty'
        return 1

    if args.backend == '':
        print >> sys.stderr, 'name cannot be empty'
        return 1

    graph = {}
    graph['name'] = args.name

    if args.backend == 'berkeleydb':
        graph['directory'] = '/tmp/dendrite/dendrite-' + args.name
    elif args.backend == 'hbase':
        graph['hostname'] = 'localhost'
        graph['port'] = 2181
        graph['tablename'] = 'dendrite-' + args.name
    else:
        print >> sys.stderr, 'unknown backend', args.backend
        return 1

    if args.script == '':
        print >> sys.stderr, 'script cannot be empty'
        return 1

    try:
        with open(args.script) as f:
            script = f.read()
    except IOError, e:
        print >> sys.stderr, 'could not read script'
        return 1

    project = {
        'name': args.name,
        'graph': graph,
    }

    base64string = base64.encodestring('%s:%s' % ('user', 'password')).replace('\n', '')

    request = urllib2.Request(
        'http://localhost:8000/dendrite/api/projects',
        data=json.dumps(project),
        headers={
            'Authorization': 'Basic %s' % base64string,
            'Content-Type': 'application/json'
        }
    )

    print 'creating project'
    f = urllib2.urlopen(request)
    print f.read()

    request = urllib2.Request(
        'http://localhost:8000/dendrite/rexster-resource/graphs/%s/tp/gremlin' % args.name,
        data=json.dumps({'script': script}),
        headers={
            'Authorization': 'Basic %s' % base64string,
            'Content-Type': 'application/json'
        }
    )

    print 'initializing types'
    f = urllib2.urlopen(request)
    print f.read()

if __name__ == '__main__':
    sys.exit(main())
